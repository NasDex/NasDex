/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MasterChef, MasterChefInterface } from "../MasterChef";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract NSDXToken",
        name: "_nsdx",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_nsdxPerBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_nsdxMaxMint",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Harvest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "contract ERC20",
        name: "lpToken",
        type: "address",
      },
    ],
    name: "LogPoolAddition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "overwrite",
        type: "bool",
      },
    ],
    name: "LogSetPool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lastRewardBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lpSupply",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "accNSDXPerShare",
        type: "uint256",
      },
    ],
    name: "LogUpdatePool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_nsdxMaxMint",
        type: "uint256",
      },
    ],
    name: "SetMaxMint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "BONUS_MULTIPLIER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "contract IERC20",
        name: "_lpToken",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "bar",
    outputs: [
      {
        internalType: "contract NSDXBar",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_to",
        type: "uint256",
      },
    ],
    name: "getMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "massUpdatePools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "migrate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "migrator",
    outputs: [
      {
        internalType: "contract IMigratorChef",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nsdx",
    outputs: [
      {
        internalType: "contract NSDXToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nsdxMaxMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nsdxPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nsdxTotalMinted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pendingNSDX",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolInfo",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "lpToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastRewardBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accNSDXPerShare",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nsdxMaxMint",
        type: "uint256",
      },
    ],
    name: "setMaxMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMigratorChef",
        name: "_migrator",
        type: "address",
      },
    ],
    name: "setMigrator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAllocPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferNSDXOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "multiplierNumber",
        type: "uint256",
      },
    ],
    name: "updateMultiplier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "updatePool",
    outputs: [
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "lpToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "allocPoint",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastRewardBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "accNSDXPerShare",
            type: "uint256",
          },
        ],
        internalType: "struct MasterChef.PoolInfo",
        name: "pool",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600160055560006009553480156200001b57600080fd5b5060405162002b6d38038062002b6d8339810160408190526200003e916200025b565b620000526200004c620001f9565b620001fd565b600180556001600160a01b038416620000885760405162461bcd60e51b81526004016200007f90620002ba565b60405180910390fd5b600280546001600160a01b0319166001600160a01b0386161790556004839055600a829055600c8190556040518490620000c2906200024d565b620000ce9190620002a6565b604051809103906000f080158015620000eb573d6000803e3d6000fd5b50600380546001600160a01b03199081166001600160a01b03938416179091556040805160808101825296831687526103e860208801818152600a54928901928352600060608a0181815260078054600181018255925299517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6886004909202918201805490961696169590951790935591517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c689840155517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68a83015594517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68b90910155505050600955620002f1565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610904806200226983390190565b6000806000806080858703121562000271578384fd5b84516001600160a01b038116811462000288578485fd5b60208601516040870151606090970151919890975090945092505050565b6001600160a01b0391909116815260200190565b60208082526019908201527f746865205f6e7364782061646472657373206973207a65726f00000000000000604082015260600190565b611f6880620003016000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c8063630b5ba1116101045780638e1623e7116100a2578063eb27a92711610071578063eb27a92714610391578063f2fde38b14610399578063fc33346a146103ac578063febb0f7e146103b4576101cf565b80638e1623e71461034d57806393f1a40b14610355578063acc80ee814610376578063e2bbb1581461037e576101cf565b80637cd07e47116100de5780637cd07e47146103155780638aa285501461032a5780638da5cb5b146103325780638dbb1e3a1461033a576101cf565b8063630b5ba1146102f257806364482f79146102fa578063715018a61461030d576101cf565b8063441a3e701161017157806351eb05a61161014b57806351eb05a6146102995780635312ea8e146102b9578063547520fe146102cc5780635ffe6146146102df576101cf565b8063441a3e701461026b578063454b06081461027e57806348cd4cb114610291576101cf565b80631eaaa045116101ad5780631eaaa0451461021d578063200dab861461023257806323cf3118146102455780633aef544b14610258576101cf565b8063081e3eda146101d45780631526fe27146101f257806317caf6f114610215575b600080fd5b6101dc6103bc565b6040516101e99190611e17565b60405180910390f35b6102056102003660046118c5565b6103c2565b6040516101e99493929190611a3a565b6101dc610406565b61023061022b366004611924565b61040c565b005b6101dc6102403660046118f5565b610577565b610230610253366004611871565b610707565b610230610266366004611871565b610768565b610230610279366004611965565b610832565b61023061028c3660046118c5565b6109a4565b6101dc610bdd565b6102ac6102a73660046118c5565b610be3565b6040516101e99190611de3565b6102306102c73660046118c5565b610e36565b6102306102da3660046118c5565b610f16565b6102306102ed3660046118c5565b610fb6565b610230610ffa565b610230610308366004611986565b611026565b610230611106565b61031d611151565b6040516101e991906119cf565b6101dc611160565b61031d611166565b6101dc610348366004611965565b611175565b6101dc611190565b6103686103633660046118f5565b611196565b6040516101e9929190611e20565b6101dc6111ba565b61023061038c366004611965565b6111c0565b6101dc61132e565b6102306103a7366004611871565b611334565b61031d6113a5565b61031d6113b4565b60075490565b600781815481106103d257600080fd5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b039092169350919084565b60095481565b6104146113c3565b6001600160a01b0316610425611166565b6001600160a01b0316146104545760405162461bcd60e51b815260040161044b90611bc2565b60405180910390fd5b801561046257610462610ffa565b6000600a54431161047557600a54610477565b435b60095490915061048790856113c7565b600955604080516080810182526001600160a01b0394851681526020810195865290810191825260006060820181815260078054600181018255925291517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688600490920291820180546001600160a01b031916919096161790945593517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c689840155517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68a8301555090517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68b90910155565b6000806007848154811061059b57634e487b7160e01b600052603260045260246000fd5b600091825260208083208784526008825260408085206001600160a01b038981168752935280852060049485029092016003810154815492516370a0823160e01b815291975092959294929391909116916370a08231916105fe913091016119cf565b60206040518083038186803b15801561061657600080fd5b505afa15801561062a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064e91906118dd565b905083600201544311801561066257508015155b156106ce576000610677856002015443611175565b905060006106aa6009546106a4886001015461069e600454876113d390919063ffffffff16565b906113d3565b906113df565b90506106c96106c2846106a48464e8d4a510006113d3565b85906113c7565b935050505b6106fc83600101546106f664e8d4a510006106a48688600001546113d390919063ffffffff16565b906113eb565b979650505050505050565b61070f6113c3565b6001600160a01b0316610720611166565b6001600160a01b0316146107465760405162461bcd60e51b815260040161044b90611bc2565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6107706113c3565b6001600160a01b0316610781611166565b6001600160a01b0316146107a75760405162461bcd60e51b815260040161044b90611bc2565b6001600160a01b0381166107cd5760405162461bcd60e51b815260040161044b90611b65565b60025460405163f2fde38b60e01b81526001600160a01b039091169063f2fde38b906107fd9084906004016119cf565b600060405180830381600087803b15801561081757600080fd5b505af115801561082b573d6000803e3d6000fd5b5050505050565b600260015414156108555760405162461bcd60e51b815260040161044b90611d02565b600260018190555060006007838154811061088057634e487b7160e01b600052603260045260246000fd5b6000918252602080832086845260088252604080852033865290925292208054600490920290920192508311156108c95760405162461bcd60e51b815260040161044b90611c2e565b6108d284610be3565b50600061090182600101546106f664e8d4a510006106a4876003015487600001546113d390919063ffffffff16565b905080156109135761091333826113f7565b831561093d57815461092590856113eb565b8255825461093d906001600160a01b0316338661145f565b600383015482546109589164e8d4a51000916106a4916113d3565b6001830155604051859033907ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b56890610991908890611e17565b60405180910390a3505060018055505050565b6006546001600160a01b03166109cc5760405162461bcd60e51b815260040161044b90611db5565b6000600782815481106109ef57634e487b7160e01b600052603260045260246000fd5b60009182526020822060049182020180546040516370a0823160e01b81529194506001600160a01b0316929183916370a0823191610a2f913091016119cf565b60206040518083038186803b158015610a4757600080fd5b505afa158015610a5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7f91906118dd565b600654909150610a9c906001600160a01b038481169116836114ba565b60065460405163ce5494bb60e01b81526000916001600160a01b03169063ce5494bb90610acd9086906004016119cf565b602060405180830381600087803b158015610ae757600080fd5b505af1158015610afb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1f91906118a9565b6040516370a0823160e01b81529091506001600160a01b038216906370a0823190610b4e9030906004016119cf565b60206040518083038186803b158015610b6657600080fd5b505afa158015610b7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9e91906118dd565b8214610bbc5760405162461bcd60e51b815260040161044b90611d39565b83546001600160a01b0319166001600160a01b039190911617909255505050565b600a5481565b610beb611840565b60078281548110610c0c57634e487b7160e01b600052603260045260246000fd5b600091825260209182902060408051608081018252600490930290910180546001600160a01b03168352600181015493830193909352600283015490820181905260039092015460608201529150431115610e315780516040516370a0823160e01b81526000916001600160a01b0316906370a0823190610c919030906004016119cf565b60206040518083038186803b158015610ca957600080fd5b505afa158015610cbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce191906118dd565b90508015610d64576000610cf9836040015143611175565b90506000610d206009546106a4866020015161069e600454876113d390919063ffffffff16565b600354909150610d39906001600160a01b03168261157d565b9050610d5c610d51846106a48464e8d4a510006113d3565b6060860151906113c7565b606085015250505b4360408301526007805483919085908110610d8f57634e487b7160e01b600052603260045260246000fd5b906000526020600020906004020160008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550602082015181600101556040820151816002015560608201518160030155905050827fcb7325664a4a3b7c7223eefc492a97ca4fdf94d46884621e5a8fae5a04b2b9d28360400151838560600151604051610e2793929190611e2e565b60405180910390a2505b919050565b60026001541415610e595760405162461bcd60e51b815260040161044b90611d02565b6002600181905550600060078281548110610e8457634e487b7160e01b600052603260045260246000fd5b60009182526020808320858452600882526040808520338087529352909320805460049093029093018054909450610ec9926001600160a01b0391909116919061145f565b8054604051849133917fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae059591610efd91611e17565b60405180910390a3600080825560019182015580555050565b610f1e6113c3565b6001600160a01b0316610f2f611166565b6001600160a01b031614610f555760405162461bcd60e51b815260040161044b90611bc2565b600b548111610f765760405162461bcd60e51b815260040161044b90611c5a565b600c8190556040517f8b72f1a5374c75a08418427d4a630dd5288aedafecc42e152fd0551712fcad5f90610fab908390611e17565b60405180910390a150565b610fbe6113c3565b6001600160a01b0316610fcf611166565b6001600160a01b031614610ff55760405162461bcd60e51b815260040161044b90611bc2565b600555565b60075460005b818110156110225761101181610be3565b5061101b81611ede565b9050611000565b5050565b61102e6113c3565b6001600160a01b031661103f611166565b6001600160a01b0316146110655760405162461bcd60e51b815260040161044b90611bc2565b801561107357611073610ffa565b6110c4826110be6007868154811061109b57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060040201600101546009546113eb90919063ffffffff16565b906113c7565b60098190555081600784815481106110ec57634e487b7160e01b600052603260045260246000fd5b906000526020600020906004020160010181905550505050565b61110e6113c3565b6001600160a01b031661111f611166565b6001600160a01b0316146111455760405162461bcd60e51b815260040161044b90611bc2565b61114f600061162f565b565b6006546001600160a01b031681565b60055481565b6000546001600160a01b031690565b6005546000906111899061069e84866113eb565b9392505050565b600c5481565b60086020908152600092835260408084209091529082529020805460019091015482565b600b5481565b600260015414156111e35760405162461bcd60e51b815260040161044b90611d02565b6002600155806112055760405162461bcd60e51b815260040161044b90611b1f565b60006007838154811061122857634e487b7160e01b600052603260045260246000fd5b6000918252602080832086845260088252604080852033865290925292206004909102909101915061125984610be3565b508054156112a357600061128f82600101546106f664e8d4a510006106a4876003015487600001546113d390919063ffffffff16565b905080156112a1576112a133826113f7565b505b81546112ba906001600160a01b031633308661167f565b80546112c690846113c7565b80825560038301546112e39164e8d4a51000916106a491906113d3565b6001820155604051849033907f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159061131c908790611e17565b60405180910390a35050600180555050565b60045481565b61133c6113c3565b6001600160a01b031661134d611166565b6001600160a01b0316146113735760405162461bcd60e51b815260040161044b90611bc2565b6001600160a01b0381166113995760405162461bcd60e51b815260040161044b90611a93565b6113a28161162f565b50565b6002546001600160a01b031681565b6003546001600160a01b031681565b3390565b60006111898284611e44565b60006111898284611e7c565b60006111898284611e5c565b60006111898284611e9b565b60035460405163acf51ef960e01b81526001600160a01b039091169063acf51ef9906114299085908590600401611a21565b600060405180830381600087803b15801561144357600080fd5b505af1158015611457573d6000803e3d6000fd5b505050505050565b6114b58363a9059cbb60e01b848460405160240161147e929190611a21565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526116a6565b505050565b8015806115425750604051636eb1769f60e11b81526001600160a01b0384169063dd62ed3e906114f090309086906004016119e3565b60206040518083038186803b15801561150857600080fd5b505afa15801561151c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061154091906118dd565b155b61155e5760405162461bcd60e51b815260040161044b90611d5f565b6114b58363095ea7b360e01b848460405160240161147e929190611a21565b600080611597600b54600c546113eb90919063ffffffff16565b9050808311156115a9578091506115ad565b8291505b811561162857600b546115c090836113c7565b600b556002546040516340c10f1960e01b81526001600160a01b03909116906340c10f19906115f59087908690600401611a21565b600060405180830381600087803b15801561160f57600080fd5b505af1158015611623573d6000803e3d6000fd5b505050505b5092915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6116a0846323b872dd60e01b85858560405160240161147e939291906119fd565b50505050565b60006116fb826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166117359092919063ffffffff16565b8051909150156114b55780806020019051810190611719919061188d565b6114b55760405162461bcd60e51b815260040161044b90611cb8565b6060611744848460008561174c565b949350505050565b60608247101561176e5760405162461bcd60e51b815260040161044b90611ad9565b61177785611801565b6117935760405162461bcd60e51b815260040161044b90611bf7565b600080866001600160a01b031685876040516117af91906119b3565b60006040518083038185875af1925050503d80600081146117ec576040519150601f19603f3d011682016040523d82523d6000602084013e6117f1565b606091505b50915091506106fc828286611807565b3b151590565b60608315611816575081611189565b8251156118265782518084602001fd5b8160405162461bcd60e51b815260040161044b9190611a60565b604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b600060208284031215611882578081fd5b813561118981611f0f565b60006020828403121561189e578081fd5b815161118981611f24565b6000602082840312156118ba578081fd5b815161118981611f0f565b6000602082840312156118d6578081fd5b5035919050565b6000602082840312156118ee578081fd5b5051919050565b60008060408385031215611907578081fd5b82359150602083013561191981611f0f565b809150509250929050565b600080600060608486031215611938578081fd5b83359250602084013561194a81611f0f565b9150604084013561195a81611f24565b809150509250925092565b60008060408385031215611977578182fd5b50508035926020909101359150565b60008060006060848603121561199a578283fd5b8335925060208401359150604084013561195a81611f24565b600082516119c5818460208701611eb2565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0394909416845260208401929092526040830152606082015260800190565b6000602082528251806020840152611a7f816040850160208701611eb2565b601f01601f19169190910160400192915050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b60208082526026908201527f6465706f7369743a20616d6f756e74206d7573742067726561746572207468616040820152656e207a65726f60d01b606082015260800190565b6020808252603f908201527f7472616e736665724e5344584f776e6572736869703a206e6577204e5344582060408201527f746f6b656e206f776e657220697320746865207a65726f206164647265737300606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252601290820152711dda5d1a191c985dce881b9bdd0819dbdbd960721b604082015260600190565b602080825260409082018190527f7365744d61784d696e743a20746865206e6577206d6178206d696e74206d7573908201527f742062652067726561746572207468616e2063757272656e74206d696e746564606082015260800190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252600c908201526b1b5a59dc985d194e8818985960a21b604082015260600190565b60208082526036908201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60408201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b606082015260800190565b60208082526014908201527336b4b3b930ba329d1037379036b4b3b930ba37b960611b604082015260600190565b81516001600160a01b0316815260208083015190820152604080830151908201526060918201519181019190915260800190565b90815260200190565b918252602082015260400190565b9283526020830191909152604082015260600190565b60008219821115611e5757611e57611ef9565b500190565b600082611e7757634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611e9657611e96611ef9565b500290565b600082821015611ead57611ead611ef9565b500390565b60005b83811015611ecd578181015183820152602001611eb5565b838111156116a05750506000910152565b6000600019821415611ef257611ef2611ef9565b5060010190565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03811681146113a257600080fd5b80151581146113a257600080fdfea264697066735822122014a23d446ca5ca7cad6f91ffad2429ce2523c02b01b816673e76d3c0c98a494464736f6c63430008000033608060405234801561001057600080fd5b5060405161090438038061090483398101604081905261002f916100e7565b61003f61003a610093565b610097565b6001600160a01b03811661006e5760405162461bcd60e51b815260040161006590610115565b60405180910390fd5b600180546001600160a01b0319166001600160a01b039290921691909117905561014c565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100f8578081fd5b81516001600160a01b038116811461010e578182fd5b9392505050565b60208082526019908201527f746865205f6e7364782061646472657373206973207a65726f00000000000000604082015260600190565b6107a98061015b6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b14610066578063acf51ef914610084578063f2fde38b14610097578063fc33346a146100aa575b600080fd5b6100646100b2565b005b61006e610106565b60405161007b91906105a1565b60405180910390f35b610064610092366004610524565b610115565b6100646100a536600461050a565b610223565b61006e610294565b6100ba6102a3565b6001600160a01b03166100cb610106565b6001600160a01b0316146100fa5760405162461bcd60e51b81526004016100f19061068d565b60405180910390fd5b61010460006102a7565b565b6000546001600160a01b031690565b61011d6102a3565b6001600160a01b031661012e610106565b6001600160a01b0316146101545760405162461bcd60e51b81526004016100f19061068d565b6001546040516370a0823160e01b81526000916001600160a01b0316906370a08231906101859030906004016105a1565b60206040518083038186803b15801561019d57600080fd5b505afa1580156101b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d5919061056d565b905080821180156101e65750600081115b1561020757600154610202906001600160a01b031684836102f7565b61021e565b60015461021e906001600160a01b031684846102f7565b505050565b61022b6102a3565b6001600160a01b031661023c610106565b6001600160a01b0316146102625760405162461bcd60e51b81526004016100f19061068d565b6001600160a01b0381166102885760405162461bcd60e51b81526004016100f190610601565b610291816102a7565b50565b6001546001600160a01b031681565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61021e8363a9059cbb60e01b84846040516024016103169291906105b5565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152600061039d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166103d79092919063ffffffff16565b80519091501561021e57808060200190518101906103bb919061054d565b61021e5760405162461bcd60e51b81526004016100f1906106f9565b60606103e684846000856103f0565b90505b9392505050565b6060824710156104125760405162461bcd60e51b81526004016100f190610647565b61041b856104b0565b6104375760405162461bcd60e51b81526004016100f1906106c2565b600080866001600160a01b031685876040516104539190610585565b60006040518083038185875af1925050503d8060008114610490576040519150601f19603f3d011682016040523d82523d6000602084013e610495565b606091505b50915091506104a58282866104ba565b979650505050505050565b803b15155b919050565b606083156104c95750816103e9565b8251156104d95782518084602001fd5b8160405162461bcd60e51b81526004016100f191906105ce565b80356001600160a01b03811681146104b557600080fd5b60006020828403121561051b578081fd5b6103e9826104f3565b60008060408385031215610536578081fd5b61053f836104f3565b946020939093013593505050565b60006020828403121561055e578081fd5b815180151581146103e9578182fd5b60006020828403121561057e578081fd5b5051919050565b60008251610597818460208701610743565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b60006020825282518060208401526105ed816040850160208701610743565b601f01601f19169190910160400192915050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b60005b8381101561075e578181015183820152602001610746565b8381111561076d576000848401525b5050505056fea2646970667358221220442ab058407495a4551ec83d937d4093db8867c83dc67bd55d1d5348425ba5c964736f6c63430008000033";

export class MasterChef__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _nsdx: string,
    _nsdxPerBlock: BigNumberish,
    _startBlock: BigNumberish,
    _nsdxMaxMint: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MasterChef> {
    return super.deploy(
      _nsdx,
      _nsdxPerBlock,
      _startBlock,
      _nsdxMaxMint,
      overrides || {}
    ) as Promise<MasterChef>;
  }
  getDeployTransaction(
    _nsdx: string,
    _nsdxPerBlock: BigNumberish,
    _startBlock: BigNumberish,
    _nsdxMaxMint: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _nsdx,
      _nsdxPerBlock,
      _startBlock,
      _nsdxMaxMint,
      overrides || {}
    );
  }
  attach(address: string): MasterChef {
    return super.attach(address) as MasterChef;
  }
  connect(signer: Signer): MasterChef__factory {
    return super.connect(signer) as MasterChef__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MasterChefInterface {
    return new utils.Interface(_abi) as MasterChefInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MasterChef {
    return new Contract(address, _abi, signerOrProvider) as MasterChef;
  }
}
