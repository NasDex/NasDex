/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MasterChef, MasterChefInterface } from "../MasterChef";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract NSDXToken",
        name: "_nsdx",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_nsdxPerBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_nsdxMaxMint",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Harvest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "contract ERC20",
        name: "lpToken",
        type: "address",
      },
    ],
    name: "LogPoolAddition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "overwrite",
        type: "bool",
      },
    ],
    name: "LogSetPool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lastRewardBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lpSupply",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "accNSDXPerShare",
        type: "uint256",
      },
    ],
    name: "LogUpdatePool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_nsdxMaxMint",
        type: "uint256",
      },
    ],
    name: "SetMaxMint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_nsdxPerBlock",
        type: "uint256",
      },
    ],
    name: "SetPerBLock",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "multiplierNumber",
        type: "uint256",
      },
    ],
    name: "UpdateMultiplier",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "BONUS_MULTIPLIER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "contract IERC20",
        name: "_lpToken",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_to",
        type: "uint256",
      },
    ],
    name: "getMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "massUpdatePools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nsdxMaxMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nsdxPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nsdxTotalMinted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pendingNSDX",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolInfo",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "lpToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastRewardBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accNSDXPerShare",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nsdxMaxMint",
        type: "uint256",
      },
    ],
    name: "setMaxMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nsdxPerBlock",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "setPerBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAllocPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferNSDXOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "multiplierNumber",
        type: "uint256",
      },
    ],
    name: "updateMultiplier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "updatePool",
    outputs: [
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "lpToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "allocPoint",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastRewardBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "accNSDXPerShare",
            type: "uint256",
          },
        ],
        internalType: "struct MasterChef.PoolInfo",
        name: "pool",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c0604052600160035560006006553480156200001b57600080fd5b5060405162002833380380620028338339810160408190526200003e9162000256565b620000526200004c620001f4565b620001f8565b600180556001600160a01b038416620000885760405162461bcd60e51b81526004016200007f90620002b5565b60405180910390fd5b6001600160601b0319606085901b166080526002839055600782905560098190556040518490620000b99062000248565b620000c59190620002a1565b604051809103906000f080158015620000e2573d6000803e3d6000fd5b50606090811b6001600160601b03191660a052604080516080810182526001600160a01b0396871681526103e8602082018181526007549383019384526000948301858152600480546001810182559681905293517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b9690940295860180546001600160a01b03191694909a169390931790985596517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c84015590517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19d830155517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19e90910155505050600655620002ec565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6109048062001f2f83390190565b600080600080608085870312156200026c578384fd5b84516001600160a01b038116811462000283578485fd5b60208601516040870151606090970151919890975090945092505050565b6001600160a01b0391909116815260200190565b60208082526019908201527f746865205f6e7364782061646472657373206973207a65726f00000000000000604082015260600190565b60805160601c60a05160601c611c096200032660003960008181610a2601526111fb015260008181610700015261131b0152611c096000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80635ffe6146116100de5780638dbb1e3a11610097578063acc80ee811610071578063acc80ee8146102ff578063e2bbb15814610307578063eb27a9271461031a578063f2fde38b1461032257610173565b80638dbb1e3a146102c35780638e1623e7146102d657806393f1a40b146102de57610173565b80635ffe614614610270578063630b5ba11461028357806364482f791461028b578063715018a61461029e5780638aa28550146102a65780638da5cb5b146102ae57610173565b8063441a3e7011610130578063441a3e70146101fc57806348cd4cb11461020f57806351eb05a6146102175780635312ea8e1461023757806353f4b98d1461024a578063547520fe1461025d57610173565b8063081e3eda146101785780631526fe271461019657806317caf6f1146101b95780631eaaa045146101c1578063200dab86146101d65780633aef544b146101e9575b600080fd5b610180610335565b60405161018d9190611ab8565b60405180910390f35b6101a96101a4366004611606565b61033b565b60405161018d9493929190611785565b61018061037f565b6101d46101cf366004611689565b610385565b005b6101806101e4366004611636565b6104f4565b6101d46101f73660046115ce565b610684565b6101d461020a3660046116ca565b61076a565b6101806108dc565b61022a610225366004611606565b6108e2565b60405161018d9190611a84565b6101d4610245366004611606565b610b48565b6101d4610258366004611665565b610c28565b6101d461026b366004611606565b610cb6565b6101d461027e366004611606565b610d56565b6101d4610dca565b6101d46102993660046116eb565b610df6565b6101d4610f20565b610180610f6b565b6102b6610f71565b60405161018d9190611734565b6101806102d13660046116ca565b610f80565b610180610f9b565b6102f16102ec366004611636565b610fa1565b60405161018d929190611ac1565b610180610fc5565b6101d46103153660046116ca565b610fcb565b610180611139565b6101d46103303660046115ce565b61113f565b60045490565b6004818154811061034b57600080fd5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b039092169350919084565b60065481565b61038d6111b0565b6001600160a01b031661039e610f71565b6001600160a01b0316146103cd5760405162461bcd60e51b81526004016103c49061190d565b60405180910390fd5b80156103db576103db610dca565b600060075443116103ee576007546103f0565b435b60065490915061040090856111b4565b600655604080516080810182526001600160a01b03948516815260208101958652908101918252600060608201818152600480546001810182559281905292517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b9290930291820180546001600160a01b031916939096169290921790945593517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c840155517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19d8301555090517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19e90910155565b6000806004848154811061051857634e487b7160e01b600052603260045260246000fd5b600091825260208083208784526005825260408085206001600160a01b038981168752935280852060049485029092016003810154815492516370a0823160e01b815291975092959294929391909116916370a082319161057b91309101611734565b60206040518083038186803b15801561059357600080fd5b505afa1580156105a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105cb919061161e565b90508360020154431180156105df57508015155b1561064b5760006105f4856002015443610f80565b90506000610627600654610621886001015461061b600254876111c090919063ffffffff16565b906111c0565b906111cc565b905061064661063f846106218464e8d4a510006111c0565b85906111b4565b935050505b610679836001015461067364e8d4a510006106218688600001546111c090919063ffffffff16565b906111d8565b979650505050505050565b61068c6111b0565b6001600160a01b031661069d610f71565b6001600160a01b0316146106c35760405162461bcd60e51b81526004016103c49061190d565b6001600160a01b0381166106e95760405162461bcd60e51b81526004016103c4906118b0565b60405163f2fde38b60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063f2fde38b90610735908490600401611734565b600060405180830381600087803b15801561074f57600080fd5b505af1158015610763573d6000803e3d6000fd5b5050505050565b6002600154141561078d5760405162461bcd60e51b81526004016103c490611a4d565b60026001819055506000600483815481106107b857634e487b7160e01b600052603260045260246000fd5b6000918252602080832086845260058252604080852033865290925292208054600490920290920192508311156108015760405162461bcd60e51b81526004016103c490611979565b61080a846108e2565b506000610839826001015461067364e8d4a51000610621876003015487600001546111c090919063ffffffff16565b9050801561084b5761084b33826111e4565b831561087557815461085d90856111d8565b82558254610875906001600160a01b03163386611268565b600383015482546108909164e8d4a5100091610621916111c0565b6001830155604051859033907ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568906108c9908890611ab8565b60405180910390a3505060018055505050565b60075481565b6108ea61159d565b6004828154811061090b57634e487b7160e01b600052603260045260246000fd5b600091825260209182902060408051608081018252600490930290910180546001600160a01b03168352600181015493830193909352600283015490820181905260039092015460608201529150431115610b435780516040516370a0823160e01b81526000916001600160a01b0316906370a0823190610990903090600401611734565b60206040518083038186803b1580156109a857600080fd5b505afa1580156109bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e0919061161e565b90508015610a765760006109f8836040015143610f80565b90506000610a1f600654610621866020015161061b600254876111c090919063ffffffff16565b9050610a4b7f0000000000000000000000000000000000000000000000000000000000000000826112be565b9050610a6e610a63846106218464e8d4a510006111c0565b6060860151906111b4565b606085015250505b4360408301526004805483919085908110610aa157634e487b7160e01b600052603260045260246000fd5b906000526020600020906004020160008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550602082015181600101556040820151816002015560608201518160030155905050827fcb7325664a4a3b7c7223eefc492a97ca4fdf94d46884621e5a8fae5a04b2b9d28360400151838560600151604051610b3993929190611acf565b60405180910390a2505b919050565b60026001541415610b6b5760405162461bcd60e51b81526004016103c490611a4d565b6002600181905550600060048281548110610b9657634e487b7160e01b600052603260045260246000fd5b60009182526020808320858452600582526040808520338087529352909320805460049093029093018054909450610bdb926001600160a01b03919091169190611268565b8054604051849133917fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae059591610c0f91611ab8565b60405180910390a3600080825560019182015580555050565b610c306111b0565b6001600160a01b0316610c41610f71565b6001600160a01b031614610c675760405162461bcd60e51b81526004016103c49061190d565b8015610c7557610c75610dca565b60028290556040517f9a2c2dfd31d52ba0d54a595c99d1764be75d17ca6259012b8dac0438ad2f0b2e90610caa908490611ab8565b60405180910390a15050565b610cbe6111b0565b6001600160a01b0316610ccf610f71565b6001600160a01b031614610cf55760405162461bcd60e51b81526004016103c49061190d565b6008548111610d165760405162461bcd60e51b81526004016103c4906119a5565b60098190556040517f8b72f1a5374c75a08418427d4a630dd5288aedafecc42e152fd0551712fcad5f90610d4b908390611ab8565b60405180910390a150565b610d5e6111b0565b6001600160a01b0316610d6f610f71565b6001600160a01b031614610d955760405162461bcd60e51b81526004016103c49061190d565b60038190556040517fa0be54773ac26c27d6d0e44698c6b7c95df74fcf44847d1561849a34fc48b07890610d4b908390611ab8565b60045460005b81811015610df257610de1816108e2565b50610deb81611b7f565b9050610dd0565b5050565b610dfe6111b0565b6001600160a01b0316610e0f610f71565b6001600160a01b031614610e355760405162461bcd60e51b81526004016103c49061190d565b8015610e4857610e43610dca565b610e53565b610e51836108e2565b505b60048381548110610e7457634e487b7160e01b600052603260045260246000fd5b9060005260206000209060040201600101548214610f1b57610edd82610ed760048681548110610eb457634e487b7160e01b600052603260045260246000fd5b9060005260206000209060040201600101546006546111d890919063ffffffff16565b906111b4565b6006819055508160048481548110610f0557634e487b7160e01b600052603260045260246000fd5b9060005260206000209060040201600101819055505b505050565b610f286111b0565b6001600160a01b0316610f39610f71565b6001600160a01b031614610f5f5760405162461bcd60e51b81526004016103c49061190d565b610f69600061138c565b565b60035481565b6000546001600160a01b031690565b600354600090610f949061061b84866111d8565b9392505050565b60095481565b60056020908152600092835260408084209091529082529020805460019091015482565b60085481565b60026001541415610fee5760405162461bcd60e51b81526004016103c490611a4d565b6002600155806110105760405162461bcd60e51b81526004016103c49061186a565b60006004838154811061103357634e487b7160e01b600052603260045260246000fd5b60009182526020808320868452600582526040808520338652909252922060049091029091019150611064846108e2565b508054156110ae57600061109a826001015461067364e8d4a51000610621876003015487600001546111c090919063ffffffff16565b905080156110ac576110ac33826111e4565b505b81546110c5906001600160a01b03163330866113dc565b80546110d190846111b4565b80825560038301546110ee9164e8d4a510009161062191906111c0565b6001820155604051849033907f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1590611127908790611ab8565b60405180910390a35050600180555050565b60025481565b6111476111b0565b6001600160a01b0316611158610f71565b6001600160a01b03161461117e5760405162461bcd60e51b81526004016103c49061190d565b6001600160a01b0381166111a45760405162461bcd60e51b81526004016103c4906117de565b6111ad8161138c565b50565b3390565b6000610f948284611ae5565b6000610f948284611b1d565b6000610f948284611afd565b6000610f948284611b3c565b60405163acf51ef960e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063acf51ef990611232908590859060040161176c565b600060405180830381600087803b15801561124c57600080fd5b505af1158015611260573d6000803e3d6000fd5b505050505050565b610f1b8363a9059cbb60e01b848460405160240161128792919061176c565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611403565b6000806112d86008546009546111d890919063ffffffff16565b9050808311156112ea578091506112ee565b8291505b81156113855760085461130190836111b4565b6008556040516340c10f1960e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906340c10f1990611352908790869060040161176c565b600060405180830381600087803b15801561136c57600080fd5b505af1158015611380573d6000803e3d6000fd5b505050505b5092915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6113fd846323b872dd60e01b85858560405160240161128793929190611748565b50505050565b6000611458826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166114929092919063ffffffff16565b805190915015610f1b578080602001905181019061147691906115ea565b610f1b5760405162461bcd60e51b81526004016103c490611a03565b60606114a184846000856114a9565b949350505050565b6060824710156114cb5760405162461bcd60e51b81526004016103c490611824565b6114d48561155e565b6114f05760405162461bcd60e51b81526004016103c490611942565b600080866001600160a01b0316858760405161150c9190611718565b60006040518083038185875af1925050503d8060008114611549576040519150601f19603f3d011682016040523d82523d6000602084013e61154e565b606091505b5091509150610679828286611564565b3b151590565b60608315611573575081610f94565b8251156115835782518084602001fd5b8160405162461bcd60e51b81526004016103c491906117ab565b604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b6000602082840312156115df578081fd5b8135610f9481611bb0565b6000602082840312156115fb578081fd5b8151610f9481611bc5565b600060208284031215611617578081fd5b5035919050565b60006020828403121561162f578081fd5b5051919050565b60008060408385031215611648578081fd5b82359150602083013561165a81611bb0565b809150509250929050565b60008060408385031215611677578182fd5b82359150602083013561165a81611bc5565b60008060006060848603121561169d578081fd5b8335925060208401356116af81611bb0565b915060408401356116bf81611bc5565b809150509250925092565b600080604083850312156116dc578182fd5b50508035926020909101359150565b6000806000606084860312156116ff578283fd5b833592506020840135915060408401356116bf81611bc5565b6000825161172a818460208701611b53565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0394909416845260208401929092526040830152606082015260800190565b60006020825282518060208401526117ca816040850160208701611b53565b601f01601f19169190910160400192915050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b60208082526026908201527f6465706f7369743a20616d6f756e74206d7573742067726561746572207468616040820152656e207a65726f60d01b606082015260800190565b6020808252603f908201527f7472616e736665724e5344584f776e6572736869703a206e6577204e5344582060408201527f746f6b656e206f776e657220697320746865207a65726f206164647265737300606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252601290820152711dda5d1a191c985dce881b9bdd0819dbdbd960721b604082015260600190565b602080825260409082018190527f7365744d61784d696e743a20746865206e6577206d6178206d696e74206d7573908201527f742062652067726561746572207468616e2063757272656e74206d696e746564606082015260800190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b81516001600160a01b0316815260208083015190820152604080830151908201526060918201519181019190915260800190565b90815260200190565b918252602082015260400190565b9283526020830191909152604082015260600190565b60008219821115611af857611af8611b9a565b500190565b600082611b1857634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611b3757611b37611b9a565b500290565b600082821015611b4e57611b4e611b9a565b500390565b60005b83811015611b6e578181015183820152602001611b56565b838111156113fd5750506000910152565b6000600019821415611b9357611b93611b9a565b5060010190565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03811681146111ad57600080fd5b80151581146111ad57600080fdfea264697066735822122047f9e3ea32fdab8b7eea44bb830bb7f3c28b1b953dee56c3448a4453e06ea3a564736f6c63430008000033608060405234801561001057600080fd5b5060405161090438038061090483398101604081905261002f916100e7565b61003f61003a610093565b610097565b6001600160a01b03811661006e5760405162461bcd60e51b815260040161006590610115565b60405180910390fd5b600180546001600160a01b0319166001600160a01b039290921691909117905561014c565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100f8578081fd5b81516001600160a01b038116811461010e578182fd5b9392505050565b60208082526019908201527f746865205f6e7364782061646472657373206973207a65726f00000000000000604082015260600190565b6107a98061015b6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b14610066578063acf51ef914610084578063f2fde38b14610097578063fc33346a146100aa575b600080fd5b6100646100b2565b005b61006e610106565b60405161007b91906105a1565b60405180910390f35b610064610092366004610524565b610115565b6100646100a536600461050a565b610223565b61006e610294565b6100ba6102a3565b6001600160a01b03166100cb610106565b6001600160a01b0316146100fa5760405162461bcd60e51b81526004016100f19061068d565b60405180910390fd5b61010460006102a7565b565b6000546001600160a01b031690565b61011d6102a3565b6001600160a01b031661012e610106565b6001600160a01b0316146101545760405162461bcd60e51b81526004016100f19061068d565b6001546040516370a0823160e01b81526000916001600160a01b0316906370a08231906101859030906004016105a1565b60206040518083038186803b15801561019d57600080fd5b505afa1580156101b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d5919061056d565b905080821180156101e65750600081115b1561020757600154610202906001600160a01b031684836102f7565b61021e565b60015461021e906001600160a01b031684846102f7565b505050565b61022b6102a3565b6001600160a01b031661023c610106565b6001600160a01b0316146102625760405162461bcd60e51b81526004016100f19061068d565b6001600160a01b0381166102885760405162461bcd60e51b81526004016100f190610601565b610291816102a7565b50565b6001546001600160a01b031681565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61021e8363a9059cbb60e01b84846040516024016103169291906105b5565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152600061039d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166103d79092919063ffffffff16565b80519091501561021e57808060200190518101906103bb919061054d565b61021e5760405162461bcd60e51b81526004016100f1906106f9565b60606103e684846000856103f0565b90505b9392505050565b6060824710156104125760405162461bcd60e51b81526004016100f190610647565b61041b856104b0565b6104375760405162461bcd60e51b81526004016100f1906106c2565b600080866001600160a01b031685876040516104539190610585565b60006040518083038185875af1925050503d8060008114610490576040519150601f19603f3d011682016040523d82523d6000602084013e610495565b606091505b50915091506104a58282866104ba565b979650505050505050565b803b15155b919050565b606083156104c95750816103e9565b8251156104d95782518084602001fd5b8160405162461bcd60e51b81526004016100f191906105ce565b80356001600160a01b03811681146104b557600080fd5b60006020828403121561051b578081fd5b6103e9826104f3565b60008060408385031215610536578081fd5b61053f836104f3565b946020939093013593505050565b60006020828403121561055e578081fd5b815180151581146103e9578182fd5b60006020828403121561057e578081fd5b5051919050565b60008251610597818460208701610743565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b60006020825282518060208401526105ed816040850160208701610743565b601f01601f19169190910160400192915050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b60005b8381101561075e578181015183820152602001610746565b8381111561076d576000848401525b5050505056fea2646970667358221220442ab058407495a4551ec83d937d4093db8867c83dc67bd55d1d5348425ba5c964736f6c63430008000033";

export class MasterChef__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _nsdx: string,
    _nsdxPerBlock: BigNumberish,
    _startBlock: BigNumberish,
    _nsdxMaxMint: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MasterChef> {
    return super.deploy(
      _nsdx,
      _nsdxPerBlock,
      _startBlock,
      _nsdxMaxMint,
      overrides || {}
    ) as Promise<MasterChef>;
  }
  getDeployTransaction(
    _nsdx: string,
    _nsdxPerBlock: BigNumberish,
    _startBlock: BigNumberish,
    _nsdxMaxMint: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _nsdx,
      _nsdxPerBlock,
      _startBlock,
      _nsdxMaxMint,
      overrides || {}
    );
  }
  attach(address: string): MasterChef {
    return super.attach(address) as MasterChef;
  }
  connect(signer: Signer): MasterChef__factory {
    return super.connect(signer) as MasterChef__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MasterChefInterface {
    return new utils.Interface(_abi) as MasterChefInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MasterChef {
    return new Contract(address, _abi, signerOrProvider) as MasterChef;
  }
}
