/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { NSDXBar, NSDXBarInterface } from "../NSDXBar";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_nsdx",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "nsdx",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "safeNSDXTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161090438038061090483398101604081905261002f916100e7565b61003f61003a610093565b610097565b6001600160a01b03811661006e5760405162461bcd60e51b815260040161006590610115565b60405180910390fd5b600180546001600160a01b0319166001600160a01b039290921691909117905561014c565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100f8578081fd5b81516001600160a01b038116811461010e578182fd5b9392505050565b60208082526019908201527f746865205f6e7364782061646472657373206973207a65726f00000000000000604082015260600190565b6107a98061015b6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b14610066578063acf51ef914610084578063f2fde38b14610097578063fc33346a146100aa575b600080fd5b6100646100b2565b005b61006e610106565b60405161007b91906105a1565b60405180910390f35b610064610092366004610524565b610115565b6100646100a536600461050a565b610223565b61006e610294565b6100ba6102a3565b6001600160a01b03166100cb610106565b6001600160a01b0316146100fa5760405162461bcd60e51b81526004016100f19061068d565b60405180910390fd5b61010460006102a7565b565b6000546001600160a01b031690565b61011d6102a3565b6001600160a01b031661012e610106565b6001600160a01b0316146101545760405162461bcd60e51b81526004016100f19061068d565b6001546040516370a0823160e01b81526000916001600160a01b0316906370a08231906101859030906004016105a1565b60206040518083038186803b15801561019d57600080fd5b505afa1580156101b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d5919061056d565b905080821180156101e65750600081115b1561020757600154610202906001600160a01b031684836102f7565b61021e565b60015461021e906001600160a01b031684846102f7565b505050565b61022b6102a3565b6001600160a01b031661023c610106565b6001600160a01b0316146102625760405162461bcd60e51b81526004016100f19061068d565b6001600160a01b0381166102885760405162461bcd60e51b81526004016100f190610601565b610291816102a7565b50565b6001546001600160a01b031681565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61021e8363a9059cbb60e01b84846040516024016103169291906105b5565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152600061039d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166103d79092919063ffffffff16565b80519091501561021e57808060200190518101906103bb919061054d565b61021e5760405162461bcd60e51b81526004016100f1906106f9565b60606103e684846000856103f0565b90505b9392505050565b6060824710156104125760405162461bcd60e51b81526004016100f190610647565b61041b856104b0565b6104375760405162461bcd60e51b81526004016100f1906106c2565b600080866001600160a01b031685876040516104539190610585565b60006040518083038185875af1925050503d8060008114610490576040519150601f19603f3d011682016040523d82523d6000602084013e610495565b606091505b50915091506104a58282866104ba565b979650505050505050565b803b15155b919050565b606083156104c95750816103e9565b8251156104d95782518084602001fd5b8160405162461bcd60e51b81526004016100f191906105ce565b80356001600160a01b03811681146104b557600080fd5b60006020828403121561051b578081fd5b6103e9826104f3565b60008060408385031215610536578081fd5b61053f836104f3565b946020939093013593505050565b60006020828403121561055e578081fd5b815180151581146103e9578182fd5b60006020828403121561057e578081fd5b5051919050565b60008251610597818460208701610743565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b60006020825282518060208401526105ed816040850160208701610743565b601f01601f19169190910160400192915050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b60005b8381101561075e578181015183820152602001610746565b8381111561076d576000848401525b5050505056fea2646970667358221220442ab058407495a4551ec83d937d4093db8867c83dc67bd55d1d5348425ba5c964736f6c63430008000033";

export class NSDXBar__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _nsdx: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NSDXBar> {
    return super.deploy(_nsdx, overrides || {}) as Promise<NSDXBar>;
  }
  getDeployTransaction(
    _nsdx: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_nsdx, overrides || {});
  }
  attach(address: string): NSDXBar {
    return super.attach(address) as NSDXBar;
  }
  connect(signer: Signer): NSDXBar__factory {
    return super.connect(signer) as NSDXBar__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NSDXBarInterface {
    return new utils.Interface(_abi) as NSDXBarInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NSDXBar {
    return new Contract(address, _abi, signerOrProvider) as NSDXBar;
  }
}
